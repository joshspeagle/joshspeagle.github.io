/* Circuit Animations CSS - Subtle circuit patterns and minimal animations */

/* === SUBTLE CIRCUIT BACKGROUND PATTERNS === */

/* Main circuit grid pattern for body */
body::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: -1;
    opacity: 0.02;
    background-image:
        /* Vertical lines */
        repeating-linear-gradient(90deg,
            transparent,
            transparent 199px,
            var(--accent-blue) 199px,
            var(--accent-blue) 200px),
        /* Horizontal lines */
        repeating-linear-gradient(0deg,
            transparent,
            transparent 199px,
            var(--accent-blue) 199px,
            var(--accent-blue) 200px);
    background-size: 200px 200px;
}

/* Circuit nodes at grid intersections */
body::after {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: -1;
    opacity: 0.03;
    background-image:
        repeating-radial-gradient(circle at 0 0,
            var(--accent-blue) 0,
            var(--accent-blue) 2px,
            transparent 2px,
            transparent 200px);
    background-size: 200px 200px;
}

[data-theme="light"] body::before,
[data-theme="light"] body::after {
    opacity: 0.015;
}

/* Side circuit traces for wide screens */
@media (min-width: 1400px) {
    .container {
        position: relative;
    }

    .container::before,
    .container::after {
        content: '';
        position: absolute;
        top: 0;
        width: 80px;
        height: 100%;
        pointer-events: none;
        opacity: 0.02;
        background:
            /* Main vertical trace */
            linear-gradient(90deg,
                transparent 39px,
                var(--accent-blue) 39px,
                var(--accent-blue) 41px,
                transparent 41px),
            /* Branch lines */
            repeating-linear-gradient(0deg,
                transparent 0,
                transparent 180px,
                var(--accent-blue) 180px,
                var(--accent-blue) 220px,
                transparent 220px),
            /* Connection nodes */
            repeating-radial-gradient(circle at 40px 200px,
                var(--accent-blue) 0,
                var(--accent-blue) 3px,
                transparent 3px,
                transparent 400px);
        background-size: 100% 100%, 100% 400px, 100% 400px;
    }

    .container::before {
        left: -100px;
    }

    .container::after {
        right: -100px;
    }
}

/* === ENHANCED SECTION BORDERS === */

/* Remove the old flashy animations and add subtle circuit borders */
.section {
    position: relative;
    overflow: visible;
}

/* Subtle circuit trace border that appears on hover/scroll */
.section::before {
    content: '';
    position: absolute;
    inset: -2px;
    background: var(--accent-blue);
    opacity: 0;
    transition: opacity 0.3s ease;
    clip-path: polygon(0 20px, 20px 20px, 20px 0,
            calc(50% - 30px) 0, calc(50% - 30px) 8px, calc(50% + 30px) 8px, calc(50% + 30px) 0,
            calc(100% - 20px) 0, calc(100% - 20px) 20px, 100% 20px,
            100% calc(50% - 20px), calc(100% - 8px) calc(50% - 20px), calc(100% - 8px) calc(50% + 20px), 100% calc(50% + 20px),
            100% calc(100% - 20px), calc(100% - 20px) calc(100% - 20px), calc(100% - 20px) 100%,
            calc(50% + 30px) 100%, calc(50% + 30px) calc(100% - 8px), calc(50% - 30px) calc(100% - 8px), calc(50% - 30px) 100%,
            20px 100%, 20px calc(100% - 20px), 0 calc(100% - 20px),
            0 calc(50% + 20px), 8px calc(50% + 20px), 8px calc(50% - 20px), 0 calc(50% - 20px));
}

/* Show border on hover */
.section:hover::before {
    opacity: 0.1;
}

/* === CIRCUIT CONNECTION NODES === */

/* Small nodes at section corners */
.section .circuit-node {
    position: absolute;
    width: 6px;
    height: 6px;
    background: var(--accent-blue);
    border-radius: 50%;
    opacity: 0;
    transition: opacity 0.5s ease;
    z-index: 2;
}

.section:hover .circuit-node {
    opacity: 0.3;
}

.section .circuit-node.top-left {
    top: -3px;
    left: 17px;
}

.section .circuit-node.top-right {
    top: -3px;
    right: 17px;
}

.section .circuit-node.bottom-left {
    bottom: -3px;
    left: 17px;
}

.section .circuit-node.bottom-right {
    bottom: -3px;
    right: 17px;
}

/* === NAVIGATION CIRCUIT TRACE === */

.nav {
    position: relative;
}

.nav::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 1px;
    background: var(--accent-blue);
    opacity: 0.2;
}

/* Subtle data flow on scroll */
.nav.scrolled::after {
    background: linear-gradient(90deg,
            transparent 0%,
            var(--accent-blue) 50%,
            transparent 100%);
    background-size: 200% 100%;
    animation: subtleFlow 8s linear infinite;
}

@keyframes subtleFlow {
    0% {
        background-position: -200% 0;
    }

    100% {
        background-position: 200% 0;
    }
}

/* === PUBLICATION CARD CIRCUIT EFFECT === */

.publication-card {
    position: relative;
    transition: all 0.3s ease;
}

/* Subtle trace on hover */
.publication-card::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 2px;
    height: 100%;
    background: var(--accent-blue);
    opacity: 0;
    transition: all 0.3s ease;
}

.publication-card:hover::after {
    opacity: 0.3;
}

/* === FOOTER CIRCUIT LINE === */

.footer {
    position: relative;
}

.footer::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 1px;
    background: var(--accent-blue);
    opacity: 0.2;
}

/* Quick links subtle hover effect */
.quick-links-bar {
    position: relative;
}

.quick-links-bar::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 1px;
    background: linear-gradient(90deg,
            transparent 0%,
            var(--accent-green) 50%,
            transparent 100%);
    background-size: 200% 100%;
    opacity: 0;
    transition: opacity 0.3s ease;
}

.quick-links-bar:hover::after {
    opacity: 0.3;
    animation: subtleFlow 6s linear infinite;
}

/* === ANGULAR TIMELINE ENHANCEMENTS === */

/* Ensure timeline items have proper z-index */
.timeline-item {
    z-index: 1;
}

/* Fix branch line rendering */
.timeline-item::before {
    content: '';
    position: absolute;
    top: 10px;
    height: 2px;
    background: var(--accent-blue);
    z-index: 0;
}

.timeline-item.left::before {
    right: -6%;
    width: 56%;
    transform-origin: right center;
    transform: skewY(-10deg);
}

.timeline-item.right::before {
    left: -6%;
    width: 56%;
    transform-origin: left center;
    transform: skewY(10deg);
}

/* Angular connector at branch point */
.timeline-item::after {
    content: '';
    position: absolute;
    width: 20px;
    height: 20px;
    top: 0;
    border: 2px solid var(--accent-blue);
    border-left: none;
    border-bottom: none;
    z-index: 1;
}

.timeline-item.left::after {
    right: calc(50% - 10px);
    transform: rotate(45deg);
}

.timeline-item.right::after {
    left: calc(50% - 10px);
    transform: rotate(-135deg);
}

/* === SCROLL-TRIGGERED EFFECTS === */

/* Simple fade in for sections */
.section {
    opacity: 0;
    transform: translateY(20px);
    transition: all 0.6s ease;
}

.section.visible {
    opacity: 1;
    transform: translateY(0);
}

/* Subtle pulse for timeline dots on scroll */
@keyframes subtlePulse {

    0%,
    100% {
        transform: scale(1);
        opacity: 1;
    }

    50% {
        transform: scale(1.1);
        opacity: 0.8;
    }
}

.timeline-dot.current {
    animation: subtlePulse 3s ease-in-out infinite;
}

/* === MOBILE OPTIMIZATIONS === */

@media (max-width: 768px) {

    /* Hide complex patterns on mobile */
    body::before,
    body::after,
    .container::before,
    .container::after {
        display: none;
    }

    /* Simplify section effects */
    .section .circuit-node {
        display: none;
    }

    /* Simplify timeline branches */
    .timeline-item::before {
        transform: none !important;
    }
}

/* === REDUCED MOTION === */

@media (prefers-reduced-motion: reduce) {
    * {
        animation: none !important;
        transition: none !important;
    }
}